# SPDX-FileCopyrightText: 2024 PNED G.I.E.
#
# SPDX-License-Identifier: AGPL-3.0-only

name: Publish release

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/health-ri/starter-kit-rems

jobs:
  ort:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oss-review-toolkit/ort-ci-github-action@7f23c1f8d169dad430e41df223d3b8409c7a156e
        with:
          allow-dynamic-versions: "true"
          fail-on: "issues"
          run: "cache-dependencies,cache-scan-results,labels,analyzer,evaluator,advisor,reporter,upload-results"

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: ort
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,priority=400
            type=ref,event=branch,priority=600
            type=ref,event=pr,priority=500
            type=semver,pattern={{version}},priority=700
            type=semver,pattern={{major}}.{{minor}},priority=900
            type=semver,pattern={{major}},priority=800
            type=sha,priority=1000

      - name: Extract last tag
        id: tag
        run: |
          IFS=',' read -ra TAGS <<< "${{ steps.meta.outputs.tags }}"
          LAST_INDEX=$((${#TAGS[@]} - 1))
          echo "last_tag=${TAGS[LAST_INDEX]}" >> $GITHUB_OUTPUT

      - name: Build Docker image for scanning
        uses: docker/build-push-action@v5
        with:
          context: ./rems
          push: false
          load: true
          tags: ${{ steps.tag.outputs.last_tag }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ steps.tag.outputs.last_tag }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./rems
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
